// Code generated by protoc-gen-go. DO NOT EDIT.
// source: warehouse.proto

package warehouse // import "."

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type ProductRequest struct {
	ProductID            int64    `protobuf:"varint,1,opt,name=productID,proto3" json:"productID,omitempty"`
	Demand               int64    `protobuf:"varint,2,opt,name=demand,proto3" json:"demand,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ProductRequest) Reset()         { *m = ProductRequest{} }
func (m *ProductRequest) String() string { return proto.CompactTextString(m) }
func (*ProductRequest) ProtoMessage()    {}
func (*ProductRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_warehouse_9f7410fd6014bc65, []int{0}
}
func (m *ProductRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ProductRequest.Unmarshal(m, b)
}
func (m *ProductRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ProductRequest.Marshal(b, m, deterministic)
}
func (dst *ProductRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProductRequest.Merge(dst, src)
}
func (m *ProductRequest) XXX_Size() int {
	return xxx_messageInfo_ProductRequest.Size(m)
}
func (m *ProductRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ProductRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ProductRequest proto.InternalMessageInfo

func (m *ProductRequest) GetProductID() int64 {
	if m != nil {
		return m.ProductID
	}
	return 0
}

func (m *ProductRequest) GetDemand() int64 {
	if m != nil {
		return m.Demand
	}
	return 0
}

type ProductResponse struct {
	ProductID            int64    `protobuf:"varint,1,opt,name=productID,proto3" json:"productID,omitempty"`
	Demand               int64    `protobuf:"varint,2,opt,name=demand,proto3" json:"demand,omitempty"`
	Status               int64    `protobuf:"varint,3,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ProductResponse) Reset()         { *m = ProductResponse{} }
func (m *ProductResponse) String() string { return proto.CompactTextString(m) }
func (*ProductResponse) ProtoMessage()    {}
func (*ProductResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_warehouse_9f7410fd6014bc65, []int{1}
}
func (m *ProductResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ProductResponse.Unmarshal(m, b)
}
func (m *ProductResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ProductResponse.Marshal(b, m, deterministic)
}
func (dst *ProductResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProductResponse.Merge(dst, src)
}
func (m *ProductResponse) XXX_Size() int {
	return xxx_messageInfo_ProductResponse.Size(m)
}
func (m *ProductResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ProductResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ProductResponse proto.InternalMessageInfo

func (m *ProductResponse) GetProductID() int64 {
	if m != nil {
		return m.ProductID
	}
	return 0
}

func (m *ProductResponse) GetDemand() int64 {
	if m != nil {
		return m.Demand
	}
	return 0
}

func (m *ProductResponse) GetStatus() int64 {
	if m != nil {
		return m.Status
	}
	return 0
}

type ClaimRequest struct {
	Products             []*ProductRequest `protobuf:"bytes,1,rep,name=products,proto3" json:"products,omitempty"`
	OrderID              int64             `protobuf:"varint,2,opt,name=orderID,proto3" json:"orderID,omitempty"`
	CartID               int64             `protobuf:"varint,3,opt,name=cartID,proto3" json:"cartID,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *ClaimRequest) Reset()         { *m = ClaimRequest{} }
func (m *ClaimRequest) String() string { return proto.CompactTextString(m) }
func (*ClaimRequest) ProtoMessage()    {}
func (*ClaimRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_warehouse_9f7410fd6014bc65, []int{2}
}
func (m *ClaimRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClaimRequest.Unmarshal(m, b)
}
func (m *ClaimRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClaimRequest.Marshal(b, m, deterministic)
}
func (dst *ClaimRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClaimRequest.Merge(dst, src)
}
func (m *ClaimRequest) XXX_Size() int {
	return xxx_messageInfo_ClaimRequest.Size(m)
}
func (m *ClaimRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ClaimRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ClaimRequest proto.InternalMessageInfo

func (m *ClaimRequest) GetProducts() []*ProductRequest {
	if m != nil {
		return m.Products
	}
	return nil
}

func (m *ClaimRequest) GetOrderID() int64 {
	if m != nil {
		return m.OrderID
	}
	return 0
}

func (m *ClaimRequest) GetCartID() int64 {
	if m != nil {
		return m.CartID
	}
	return 0
}

type ClaimResponse struct {
	Products             []*ProductResponse `protobuf:"bytes,1,rep,name=products,proto3" json:"products,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *ClaimResponse) Reset()         { *m = ClaimResponse{} }
func (m *ClaimResponse) String() string { return proto.CompactTextString(m) }
func (*ClaimResponse) ProtoMessage()    {}
func (*ClaimResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_warehouse_9f7410fd6014bc65, []int{3}
}
func (m *ClaimResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClaimResponse.Unmarshal(m, b)
}
func (m *ClaimResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClaimResponse.Marshal(b, m, deterministic)
}
func (dst *ClaimResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClaimResponse.Merge(dst, src)
}
func (m *ClaimResponse) XXX_Size() int {
	return xxx_messageInfo_ClaimResponse.Size(m)
}
func (m *ClaimResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ClaimResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ClaimResponse proto.InternalMessageInfo

func (m *ClaimResponse) GetProducts() []*ProductResponse {
	if m != nil {
		return m.Products
	}
	return nil
}

func init() {
	proto.RegisterType((*ProductRequest)(nil), "ProductRequest")
	proto.RegisterType((*ProductResponse)(nil), "ProductResponse")
	proto.RegisterType((*ClaimRequest)(nil), "ClaimRequest")
	proto.RegisterType((*ClaimResponse)(nil), "ClaimResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// WarehouseClient is the client API for Warehouse service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type WarehouseClient interface {
	ValidateStock(ctx context.Context, in *ProductRequest, opts ...grpc.CallOption) (*ProductResponse, error)
	ClaimProduct(ctx context.Context, in *ClaimRequest, opts ...grpc.CallOption) (*ClaimResponse, error)
}

type warehouseClient struct {
	cc *grpc.ClientConn
}

func NewWarehouseClient(cc *grpc.ClientConn) WarehouseClient {
	return &warehouseClient{cc}
}

func (c *warehouseClient) ValidateStock(ctx context.Context, in *ProductRequest, opts ...grpc.CallOption) (*ProductResponse, error) {
	out := new(ProductResponse)
	err := c.cc.Invoke(ctx, "/Warehouse/ValidateStock", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *warehouseClient) ClaimProduct(ctx context.Context, in *ClaimRequest, opts ...grpc.CallOption) (*ClaimResponse, error) {
	out := new(ClaimResponse)
	err := c.cc.Invoke(ctx, "/Warehouse/ClaimProduct", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// WarehouseServer is the server API for Warehouse service.
type WarehouseServer interface {
	ValidateStock(context.Context, *ProductRequest) (*ProductResponse, error)
	ClaimProduct(context.Context, *ClaimRequest) (*ClaimResponse, error)
}

func RegisterWarehouseServer(s *grpc.Server, srv WarehouseServer) {
	s.RegisterService(&_Warehouse_serviceDesc, srv)
}

func _Warehouse_ValidateStock_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ProductRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WarehouseServer).ValidateStock(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Warehouse/ValidateStock",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WarehouseServer).ValidateStock(ctx, req.(*ProductRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Warehouse_ClaimProduct_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ClaimRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WarehouseServer).ClaimProduct(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Warehouse/ClaimProduct",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WarehouseServer).ClaimProduct(ctx, req.(*ClaimRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Warehouse_serviceDesc = grpc.ServiceDesc{
	ServiceName: "Warehouse",
	HandlerType: (*WarehouseServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ValidateStock",
			Handler:    _Warehouse_ValidateStock_Handler,
		},
		{
			MethodName: "ClaimProduct",
			Handler:    _Warehouse_ClaimProduct_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "warehouse.proto",
}

func init() { proto.RegisterFile("warehouse.proto", fileDescriptor_warehouse_9f7410fd6014bc65) }

var fileDescriptor_warehouse_9f7410fd6014bc65 = []byte{
	// 261 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x91, 0xc1, 0x4b, 0xc3, 0x30,
	0x18, 0xc5, 0x57, 0x0b, 0xd3, 0x7d, 0xb3, 0xab, 0xe4, 0x20, 0x61, 0x78, 0x18, 0x39, 0x0d, 0x94,
	0x08, 0xd3, 0x9b, 0x78, 0xd1, 0x21, 0xec, 0x26, 0x15, 0x14, 0xbc, 0x48, 0x6c, 0x3e, 0x70, 0xb8,
	0x2e, 0x35, 0x49, 0xf1, 0xdf, 0x97, 0x2e, 0x5f, 0x3b, 0xb7, 0xde, 0x76, 0x7c, 0x2f, 0xe5, 0xfd,
	0xde, 0xeb, 0x07, 0xe9, 0xaf, 0xb2, 0xf8, 0x65, 0x2a, 0x87, 0xb2, 0xb4, 0xc6, 0x1b, 0xf1, 0x04,
	0xa3, 0x67, 0x6b, 0x74, 0x95, 0xfb, 0x0c, 0x7f, 0x2a, 0x74, 0x9e, 0x5d, 0xc0, 0xa0, 0x0c, 0xce,
	0x62, 0xce, 0xa3, 0x49, 0x34, 0x8d, 0xb3, 0xad, 0xc1, 0xce, 0xa1, 0xaf, 0xb1, 0x50, 0x6b, 0xcd,
	0x8f, 0x36, 0x4f, 0xa4, 0xc4, 0x07, 0xa4, 0x6d, 0x8e, 0x2b, 0xcd, 0xda, 0xe1, 0x61, 0x41, 0xb5,
	0xef, 0xbc, 0xf2, 0x95, 0xe3, 0x71, 0xf0, 0x83, 0x12, 0x05, 0x9c, 0x3e, 0xae, 0xd4, 0xb2, 0x68,
	0x6a, 0x5e, 0xc2, 0x09, 0x85, 0x39, 0x1e, 0x4d, 0xe2, 0xe9, 0x70, 0x96, 0xca, 0xdd, 0x25, 0x59,
	0xfb, 0x01, 0xe3, 0x70, 0x6c, 0xac, 0x46, 0xbb, 0x98, 0x13, 0xad, 0x91, 0x35, 0x2e, 0x57, 0xb6,
	0x6e, 0x48, 0xb8, 0xa0, 0xc4, 0x3d, 0x24, 0x84, 0xa3, 0x35, 0x57, 0x1d, 0xde, 0x99, 0xdc, 0x5b,
	0xbc, 0x05, 0xce, 0x2c, 0x0c, 0xde, 0x9a, 0x3f, 0xcd, 0x6e, 0x21, 0x79, 0x55, 0xab, 0xa5, 0x56,
	0x1e, 0x5f, 0xbc, 0xc9, 0xbf, 0xd9, 0x7e, 0xd3, 0x71, 0x27, 0x4a, 0xf4, 0xd8, 0x35, 0x0d, 0xa6,
	0x17, 0x96, 0xc8, 0xff, 0xfb, 0xc7, 0x23, 0xb9, 0xd3, 0x4f, 0xf4, 0x1e, 0x92, 0xf7, 0xa1, 0xbc,
	0x6b, 0xef, 0xfb, 0xd9, 0xdf, 0x1c, 0xf8, 0xe6, 0x2f, 0x00, 0x00, 0xff, 0xff, 0x29, 0x92, 0xe0,
	0x1a, 0xf3, 0x01, 0x00, 0x00,
}
